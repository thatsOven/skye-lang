import "std/os";

namespace build {
    fn compileSkye(const input: String, const output: String) !void {
        let buf = core::MutableString::from("skye compile ");
        defer buf.free();

        buf.pushString(input);
        buf.pushString(" --emit-c -o ");
        buf.pushString(output);

        const result = std::os::system(buf.toString());
        
        if result.kind == core::Result::Kind::Error {
            return (!void)::Error;
        }

        return (!void)::Ok;
    }

    fn compileCDefault(const input: String, const output: String) !void {
        let buf = core::MutableString::new(); 
        defer buf.free();

        if @UNIX_LIKE {
            buf.pushString("c99 -Wall -Wextra ");
        } else {
            // TODO
            panic("This platform is not supported yet, sorry!");
        }

        buf.pushString(input);
        buf.pushString(" -o ");
        buf.pushString(output);

        const result = std::os::system(buf.toString());

        if result.kind == core::Result::Kind::Error {
            return (!void)::Error;
        }

        return (!void)::Ok;
    }
}