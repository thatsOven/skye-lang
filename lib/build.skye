import "std/os";

namespace build {
    fn compileSkye(const input: String, const output: String, const release: u8) !void {
        let buf = core::Array::from("skye compile ");
        defer buf.free();

        @format(&buf, "{input} --emit-c -o {output}");
        
        if release {
            @format(&buf, " --release");
        }

        const result = std::os::system(buf.asString());
        
        if result.isError() {
            return (!void)::Error;
        }

        return (!void)::Ok;
    }

    fn compileCDefault(const input: String, const output: String) !void {
        let buf = core::Array::new[char](); 
        defer buf.free();

        if @UNIX_LIKE {
            buf.pushString("c99 -Wall -Wextra -lm ");
        } else {
            @todo("This platform is not supported yet, sorry!");
        }
        
        @format(&buf, "{input} -o {output}");
        const result = std::os::system(buf.asString());

        if result.isError() {
            return (!void)::Error;
        }

        return (!void)::Ok;
    }
}