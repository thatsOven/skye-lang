#bind fn system(const command: *const char) i32;
#bind fn remove(const file: *const char) i32;

namespace std {
    namespace os {
        fn system(const command: String) !i32 {
            let buf = core::Array::new[char]();
            defer buf.free();

            @format(&buf, "{command}\0");
            const result = system(buf.array.ptr);
            
            if (result) return (!i32)::Error(result);
            return (!i32)::Ok;
        }

        fn removeFile(const file: String) !void {
            let buf = core::Array::new[char]();
            defer buf.free();

            @format(&buf, "{file}\0");
            const result = remove(buf.array.ptr);

            if (result) return (!void)::Error;    
            return (!void)::Ok;
        }
    }
}