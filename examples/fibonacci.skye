import "std/fmt";

use core::io as io;
use core::Option as Option;

macro MAX_TERMS 94;

fn getInt(const buf: *Array[char]) u8 {
    while true {
        print("Insert amount of terms\n> ");

        io::stdIn.readLine(buf);
        defer buf.clear();        
        
        const parsed = buf.parseInt[u64]();

        if parsed.isSome() && parsed.some > 0 && parsed.some <= @MAX_TERMS {
            return @cast(u8, parsed.some);
        } else {
            println("Invalid input. Please retry");
        }
    }
}

fn main() {
    let a: u64 = 0;
    let b: u64 = 1;

    let stringBuffer = Array::new[char]();
    defer stringBuffer.free();

    let n = getInt(&stringBuffer);

    while n-- {
        std::fmt::intToString(&stringBuffer, a);
        defer stringBuffer.clear();

        println(stringBuffer.asString());
        
        const c = a + b;
        a = b;
        b = c;
    }
}
